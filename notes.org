* 2012-06-19: Notes to self
** FastISel
*** Rust doesn't call SelectionDAG or FastISel directly, but through an LLVM pass.
*** Some function is responsible for setting up the instruction selector (addISelToPass or somesuch).
*** Need to add fast-isel-abort parameter to this pass so the FastISel knows not to fall back to SelectionDAG.
*** Rust compilation happens in three phases:
**** Stage 0: Download binary from server.
**** Stage 1: Compile rustc with binary.
**** Stage 2: Compile rustc with itself.
**** Stage 3: Compile rustc with itself again to check stability.
*** If you swap in FastISel, then you might only be able to get through stage 1 (i.e. rustc might not be able to compile itself), but you should be able to still try some simple testcases.
*** See how many testcases you can do, then switch over to other stuff.
** Roadmap (as far as I can remember)
*** ISel
**** FastISel and fast-isel-abort
**** Merge work on FastISel
**** Finish work on SelectionDAG
*** Unwinding
*** ???
* 2012-06-20: Notes to self
** Still looking for the call that sets the ISel parameters...
*** The rustc backend calls addPassesToEmitFile for codegen (rustllvm/RustWrapper.cpp)
**** ==> calls addPassesToGenerateCode
**** ==> sets TargetMachine::setFastISel and calls TargetPassConfig::addInstSelector (abstract method)
**** ==> X86PassConfig::addInstSelector ==> createX86ISelDag ==> new X86DAGToDAGISel
*** But -fast-isel-abort is specified in SelectionDagISel.cpp
**** SelectionDAGISel.cpp is the top-level file that takes the -fast-isel and -fast-isel-abort command line params.
**** But it doesn't pass -fast-isel-abort to the TargetMachine when it creates the FastISel.
**** SelectionDAGISel manually calls the FastISel when doing codegen.
**** So it just aborts manually when FastISel fails to select all instructions for a block. (See lines 1140-1143.)
***** if (EnableFastISelAbort) llvm_unreachable(...);
** Need to grill Patrick (pcwalton) again to figure out which of his branches I'm interested in
*** gc? (11 months old)
*** backpointers? (20 months old)
*** unique-imm? (10 months old)
*** Others don't look relevant.
